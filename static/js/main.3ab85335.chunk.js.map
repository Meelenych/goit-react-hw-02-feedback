{"version":3,"sources":["components/Feedback/Statistics.js","components/Feedback/Feedback.js","components/Feedback/Section.js","App.js","index.js","components/Feedback/Feedback.module.css","App.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","s","form","map","option","button","type","onClick","Section","title","children","styles","section","App","state","handleAddFeadback","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","container","Feedback","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAoCeA,EAhCI,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,mBAExC,OAAc,IAAVD,EAEO,8BACA,oDAMA,gCACR,uCAAS,+BAAQH,OACjB,0CAAY,+BAAQC,OACpB,sCAAQ,+BAAOC,OACf,wCAAU,+BAAOC,OACjB,oDAAsB,+BAAQC,IAA9B,W,gBCIGC,EApBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,KAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEI,OACbC,KAAK,SAELC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GAHIA,S,gBCSAI,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASV,UAAWW,IAAOC,QAA3B,UACE,6BAAKH,IACJC,MCHDG,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPqB,kBAAoB,SAAAX,GAClB,EAAKY,SAAL,eAAiBZ,EAAS,EAAKU,MAAMV,GAAU,K,EAEjDa,mBAAqB,WACnB,MAA+B,EAAKH,MACpC,OADA,EAAQtB,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBwB,gCAAkC,WAChC,OAAqC,IAA9B,EAAKD,qBACR,EACAE,KAAKC,MAAO,EAAKN,MAAMtB,KAAO,EAAKyB,qBAAwB,M,4CAEjE,WACE,MAA+BI,KAAKP,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACI,sBAAKM,UAAYW,IAAOW,UAAxB,UACA,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAACc,EAAD,CACEzB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBsB,KAAKN,sBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,KAAKJ,qBACZrB,mBAAoByB,KAAKH,6C,GAlCnBM,aAyCHX,IC1CfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,yB,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.3ab85335.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage  }) => {\r\n     \r\n         if (total === 0) {\r\n            \r\n            return (<div>                   \r\n                    <p>No feedback given</p>\r\n                </div>);\r\n        }\r\n\r\n        else  {\r\n            \r\n            return (<div>          \r\n            <p>Good: <span>{ good }</span></p>\r\n            <p>Neutral: <span>{ neutral }</span></p>\r\n            <p>Bad: <span>{bad}</span></p>\r\n            <p>Total: <span>{total}</span></p>\r\n            <p>Positive Feedback: <span>{ positivePercentage}</span>%</p>\r\n\r\n          </div>);\r\n        }\r\n\r\n\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.form}>\r\n      {options.map(option => (\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          key={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\nexport default Section;","import { Component } from 'react';\nimport styles from './App.module.css';\nimport Statistics from './components/Feedback/Statistics';\nimport Feedback from './components/Feedback/Feedback';\nimport Section from './components/Feedback/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handleAddFeadback = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return this.countTotalFeedback() === 0\n      ? 0\n      : Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n        <div className={ styles.container}>\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleAddFeadback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Feedback_form__2FSJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16U6-\"};"],"sourceRoot":""}